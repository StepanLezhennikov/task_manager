services:
  db:
    image: postgres:15
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres", "-d", "task_manager" ]
      interval: 10s
      retries: 5
      start_period: 5s
      timeout: 5s
    ports:
      - "5435:5432"
    networks:
      - app-network

  task_manager:
    build: .
    container_name: task_manager
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    networks:
      - app-network
    env_file: .env
    entrypoint: "/entrypoint.sh"

  celery:
    build: .
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    networks:
      - app-network
    env_file: .env
    entrypoint: "/worker_entrypoint.sh"

  redis:
    image: redis:7.4-alpine
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5
    ports:
      - "6379:6379"
    networks:
      - app-network

volumes:
  db_data:

networks:
  app-network:
    driver: bridge
