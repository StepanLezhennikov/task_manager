name: CI

on:
  pull_request:
  push:

jobs:
  black:
    name: Run Black
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python 3.12.3
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.3'
      - name: Black Check
        uses: jpetrucciani/black-check@24.10.0

  ruff:
    runs-on: ubuntu-latest
    name: Ruff Check
    steps:
      - name: Set up Python 3.12.3
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.3'
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run Ruff
        uses: wearerequired/lint-action@v2
        with:
          linter: ruff
          args: '. --config pyproject.toml'

  run-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Docker Setup Docker
        uses: docker/setup-docker-action@v4.1.0

      - name: Docker Compose Setup
        uses: ndeloof/install-compose-action@v0.0.1

      - name: Create .env file
        run: |
          echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
          echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env
          echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
          echo DJANGO_DB_NAME=${{ secrets.DJANGO_DB_NAME }} >> .env
          echo DJANGO_DB_USER=${{ secrets.DJANGO_DB_USER }} >> .env
          echo DJANGO_DB_PASSWORD=${{ secrets.DJANGO_DB_PASSWORD }} >> .env
          echo DJANGO_DB_HOST=${{ secrets.DJANGO_DB_HOST }} >> .env
          echo DJANGO_DB_PORT=${{ secrets.DJANGO_DB_PORT }} >> .env
          echo CELERY_BROKER_URL=${{ secrets.CELERY_BROKER_URL }} >> .env
          echo CELERY_RESULT_BACKEND=${{ secrets.CELERY_RESULT_BACKEND }} >> .env
          echo SEND_MAIL_API_URL=${{ secrets.SEND_MAIL_API_URL }} >> .env
          echo SEND_MAIL_API_KEY=${{ secrets.SEND_MAIL_API_KEY }} >> .env
          echo FROM_EMAIL=${{ secrets.FROM_EMAIL }} >> .env

      - name: Debug .env file
        run: cat .env

      - name: Start up containers with docker compose
        run: docker-compose up -d

      - name: Ckeck containers
        run: docker-compose ps -a

      - name: View logs
        run: docker-compose logs task_manager

      - name: Run migrations
        run: docker-compose exec task_manager python manage.py migrate

      - name: Run tests
        run: docker-compose exec task_manager pytest --cov=. --cov-report=term --cov-fail-under=90 --cov-config=.coverage

      - name: Stop containers
        run: docker-compose down