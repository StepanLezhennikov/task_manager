name: CI

on:
  pull_request:
  push:

jobs:
  black:
    name: Run Black
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python 3.12.3
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.3'
      - name: Black Check
        uses: jpetrucciani/black-check@24.10.0

  ruff:
    runs-on: ubuntu-latest
    name: Ruff Check
    steps:
      - name: Set up Python 3.12.3
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.3'
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run Ruff
        uses: wearerequired/lint-action@v2
        with:
          linter: ruff
          args: '. --config pyproject.toml'

  run-tests:
    name: Run pytest
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: ${{ secrets.DJANGO_DB_NAME }}
          POSTGRES_USER: ${{ secrets.DJANGO_DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DJANGO_DB_PASSWORD }}
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python and Install Pytest
        uses: actions/setup-python@v5
        with:
          python-version: "3.12.3"
          dependencies: "poetry"

      - name: Install dependencies
        uses: snok/install-poetry@v1
        run: poetry install --no-interaction --no-root --verbose

      - name: Apply Django migrations
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          DJANGO_DB_NAME: ${{ secrets.DJANGO_DB_NAME }}
          DJANGO_DB_USER: ${{ secrets.DJANGO_DB_USER }}
          DJANGO_DB_PASSWORD: ${{ secrets.DJANGO_DB_PASSWORD }}
          DJANGO_DB_HOST: ${{ secrets.DJANGO_DB_HOST }}
          DJANGO_DB_PORT: ${{ secrets.DJANGO_DB_PORT }}
        run: |
          poetry run python manage.py migrate --noinput

      - name: Test with pytest and coverage
        working-directory: .
        run: |
          poetry run pytest . --cov=. --cov-report=xml --cov-report=term